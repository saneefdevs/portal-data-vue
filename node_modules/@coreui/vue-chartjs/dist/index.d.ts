import { App } from 'vue';
import CChart from './CChart';
declare const CChartBar: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartBubble: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartDoughnut: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartLine: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartPie: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartPolarArea: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartRadar: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartScatter: import("vue").DefineComponent<{}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").DefineComponent<{
    customTooltips: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
    data: {
        type: import("vue").PropType<import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>)>;
        required: true;
    };
    height: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    id: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    options: {
        type: import("vue").PropType<import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>>;
        default: undefined;
        required: false;
    };
    plugins: {
        type: import("vue").PropType<import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[]>;
        default: undefined;
        required: false;
    };
    redraw: BooleanConstructor;
    type: {
        type: import("vue").PropType<keyof import("chart.js").ChartTypeRegistry>;
        default: string;
        required: false;
    };
    width: {
        type: NumberConstructor;
        default: number;
        required: false;
    };
    wrapper: {
        type: BooleanConstructor;
        default: boolean;
        required: false;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent")[], "getDatasetAtEvent" | "getElementAtEvent" | "getElementsAtEvent", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    customTooltips?: unknown;
    data?: unknown;
    height?: unknown;
    id?: unknown;
    options?: unknown;
    plugins?: unknown;
    redraw?: unknown;
    type?: unknown;
    width?: unknown;
    wrapper?: unknown;
} & {
    customTooltips: boolean;
    data: import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown> | ((canvas: HTMLCanvasElement) => import("chart.js").ChartData<keyof import("chart.js").ChartTypeRegistry, (number | import("chart.js").ScatterDataPoint | import("chart.js").BubbleDataPoint | null)[], unknown>);
    height: number;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
} & {
    plugins?: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[] | undefined;
    id?: string | undefined;
    options?: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>> | undefined;
}> & {
    onGetDatasetAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementAtEvent?: ((...args: any[]) => any) | undefined;
    onGetElementsAtEvent?: ((...args: any[]) => any) | undefined;
}, {
    plugins: import("chart.js").Plugin<keyof import("chart.js").ChartTypeRegistry, import("chart.js/types/basic").AnyObject>[];
    customTooltips: boolean;
    height: number;
    id: string;
    options: import("chart.js/types/utils")._DeepPartialObject<import("chart.js").CoreChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ElementChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").PluginChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").DatasetChartOptions<keyof import("chart.js").ChartTypeRegistry> & import("chart.js").ScaleChartOptions<keyof import("chart.js").ChartTypeRegistry>>;
    redraw: boolean;
    type: keyof import("chart.js").ChartTypeRegistry;
    width: number;
    wrapper: boolean;
}>, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{} & {} & {}>, {}>;
declare const CChartPlugin: {
    install: (app: App) => void;
};
export default CChartPlugin;
export { CChart, CChartBar, CChartBubble, CChartDoughnut, CChartLine, CChartPie, CChartPolarArea, CChartRadar, CChartScatter, };
